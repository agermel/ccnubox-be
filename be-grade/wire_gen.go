// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/asynccnu/ccnubox-be/be-grade/cron"
	"github.com/asynccnu/ccnubox-be/be-grade/events"
	"github.com/asynccnu/ccnubox-be/be-grade/events/producer"
	"github.com/asynccnu/ccnubox-be/be-grade/grpc"
	"github.com/asynccnu/ccnubox-be/be-grade/ioc"
	"github.com/asynccnu/ccnubox-be/be-grade/repository/dao"
	"github.com/asynccnu/ccnubox-be/be-grade/service"
)

// Injectors from wire.go:

func InitApp() App {
	client := ioc.InitKafka()
	producerProducer := producer.NewSaramaProducer(client)
	logger := ioc.InitLogger()
	db := ioc.InitDB(logger)
	gradeDAO := dao.NewGradeDAO(db)
	clientv3Client := ioc.InitEtcdClient()
	userServiceClient := ioc.InitUserClient(clientv3Client)
	gradeService := service.NewGradeService(producerProducer, gradeDAO, logger, userServiceClient)
	gradeServiceServer := grpc.NewGradeGrpcService(gradeService)
	server := ioc.InitGRPCxKratosServer(gradeServiceServer, clientv3Client, logger)
	counterServiceClient := ioc.InitCounterClient(clientv3Client)
	feedServiceClient := ioc.InitFeedClient(clientv3Client)
	classerClient := ioc.InitClasslistClient(clientv3Client)
	gradeController := cron.NewGradeController(logger, counterServiceClient, userServiceClient, feedServiceClient, classerClient, gradeService)
	v := cron.NewCron(gradeController)
	gradeDetailEventConsumerHandler := events.NewGradeDetailEventConsumerHandler(client, logger, gradeService)
	v2 := ioc.InitConsumers(gradeDetailEventConsumerHandler)
	app := NewApp(server, v, v2)
	return app
}
